{"version":3,"sources":["components/Title/Title.js","components/Results/Results.js","containers/Converter/Converter.js","store/actions/actions.js","App.js","store/reducer/reducer.js","index.js","containers/Converter/Converter.module.css","components/Title/Navbar.module.css","components/Results/Results.module.css"],"names":["title","className","classes","Navbar","Brand","Title","results","props","Results","pearls","euros","currentCurrency","Converter","this","fetchCurrencyValues","conversionValue","value","currentValue","onChange","handleCurrencySelector","options","Select","placeholder","type","handleCurrencyInput","Input","onClick","conversion","inputedAmount","Button","pearlsConversion","euroConversaion","currencyName","Component","connect","state","apiKey","dispatch","event","target","option","axios","get","then","response","currencyNamesArray","Object","keys","data","map","element","label","filter","currencyVal","pearlConversionValue","currencyValue","selectedCurrency","query","conversation","convertedToEuro","convertedToPearls","toFixed","actionCreators","App","defaultActiveKey","eventKey","intialState","reducer","action","Math","abs","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a4f002e4.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport classes from \"./Navbar.module.css\";\nconst title = () => {\n  return (\n    <>\n      <Navbar\n        // className=\"row text-white\"\n        // expand=\"lg\"\n        // bg=\"secondary\"\n        // variant=\"secondary\"\n        className={classes.Navbar}\n      >\n        {/* <div className=\"col-md-12 text-center\"> */}\n        <Navbar.Brand className={classes.Title}>\n          Tomorrowland Pearl Converter\n        </Navbar.Brand>\n        {/* </div> */}\n      </Navbar>\n    </>\n  );\n};\n\nexport default title;\n","import React from \"react\";\nimport classes from \"./Results.module.css\";\nconst results = props => {\n  return (\n    <div className={classes.Results}>\n      <p>{props.pearls} Ƥ</p>\n      <p>{props.euros} €</p>\n\n      {/* <p>\n        {props.currentCurrency} {props.currencyName}\n      </p> */}\n      <p>{props.currentCurrency}</p>\n    </div>\n  );\n};\n\nexport default results;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import DropdownButton from \"react-bootstrap/DropdownButton\";\n// import Dropdown from \"react-bootstrap/Dropdown\";\n// import DropdownMenu from 'react-bootstrap/DropdownMenu';\n// import Tabs from \"react-bootstrap/Tabs\";\n// import Tab from \"react-bootstrap/Tab\";\nimport classes from \"./Converter.module.css\";\nimport Select from \"react-select\";\nimport Results from \"../../components/Results/Results\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../store/actions/actions\";\nclass Converter extends Component {\n  // state = {\n  //   options: [],\n  //   currentValue: \"\",\n  //   // currencyVal: 0,\n  //   pearlsConversion: 0,\n  //   euroConversaion: 0,\n  //   apiKey: \"9cc6f8323af31d2f1249\",\n  //   conversionValue: 0\n  // };\n\n  componentDidMount() {\n    this.props.fetchCurrencyValues();\n    // let apiKey = \"9cc6f8323af31d2f1249\";\n    // let fromCurrency = encodeURIComponent(fromCurrency);\n    // let toCurrency = encodeURIComponent(toCurrency);\n    // let query = fromCurrency + '_' + toCurrency;\n    // let url = 'https://free.currconv.com/api/v7/convert?q='\n    //     + query + '&compact=ultra&apiKey=' + apiKey;\n    //remove the euro from the list or do something about it.\n    // axios\n    //   .get(\n    //     `https://free.currconv.com/api/v7/currencies?apiKey=${this.state.apiKey}`\n    //   )\n    //   .then(response => {\n    //     console.log(\"the response is\", response);\n    //     const currencyNamesArray = Object.keys(response.data.results)\n    //       .map(element => {\n    //         return {\n    //           value: element,\n    //           label: element\n    //         };\n    //       })\n    //       .filter(element => element.value !== \"EUR\");\n    //     // const array = currencyValue.map(element => {\n    //     //   return {\n    //     //     value: element,\n    //     //     label: element\n    //     //   };\n    //     // });\n    //     // console.log(currencyValue);\n    //     // const array =\n    //     //   .currencyID.push(id);\n    //     this.setState({\n    //       options: currencyNamesArray,\n    //       conversionValue: this.props.conversionValue\n    //     });\n    //   })\n    //   .catch(error => {\n    //     console.log(\"the error is\", error);\n    //   });\n    // console.log(\"Currency ID:\", this.state.currencyID);\n    //   });\n    // console.log(\"Currency ID:\", this.state.currencyID);\n  }\n\n  // handleChange = option => {\n  //   this.setState({ currentValue: option });\n  // };\n  // handleInput = event => {\n  //   // if (event.target.value > 0) {\n  //   this.setState({ currencyVal: Math.abs(event.target.value) });\n  // };\n\n  // conversation = (currencyVal, currency) => {\n  //   // console.log(\"inside the converdation\");\n\n  //   if (currencyVal !== null && currency !== \"\") {\n  //     const query = currency.value + \"_\" + \"EUR\";\n  //     axios\n  //       .get(\n  //         \"https://free.currconv.com/api/v7/convert?q=\" +\n  //           query +\n  //           \"&compact=ultra&apiKey=\" +\n  //           this.props.apiKey\n  //       )\n  //       .then(response => {\n  //         const conversation = response.data[query];\n  //         const convertedToEuro = currencyVal * conversation;\n  //         console.log(convertedToEuro);\n  //         const convertedToPearls =\n  //           convertedToEuro / this.state.conversionValue;\n  //         console.log(convertedToPearls);\n\n  //         this.setState({\n  //           pearlsConversion: convertedToPearls.toFixed(2),\n  //           euroConversaion: convertedToEuro.toFixed(2)\n  //         });\n  //       })\n  //       .catch(error => {\n  //         console.log(error);\n  //       });\n  //   }\n  // console.log(conversation);\n  //};\n  render() {\n    // console.log(this.state);\n\n    // if (this.state.currencyVal && this.state.currentValue) {\n    //   this.conversation(this.state.currencyVal, this.state.currentValue);\n    // }\n\n    // console.log(\"the currency val is\", this.props.inputedAmount);\n\n    return (\n      // <Tabs>\n      //   <Tab eventKey=\"summer\" title=\"Summer\">\n      <div className={classes.Converter}>\n        <p> Logo will go here</p>\n        <p> 1 Pearl = {this.props.conversionValue} Euro</p>\n        <Select\n          value={this.props.currentValue}\n          onChange={this.props.handleCurrencySelector}\n          options={this.props.options}\n          className={classes.Select}\n          // styles={{ height: \"50px\" }}\n        />\n        <input\n          placeholder=\"0.00\"\n          type=\"number\"\n          // value={this.props.currencyVal}\n          onChange={this.props.handleCurrencyInput}\n          className={classes.Input}\n        />\n\n        <button\n          onClick={() =>\n            this.props.conversion(\n              this.props.inputedAmount,\n              this.props.currentValue,\n              this.props.conversionValue\n            )\n          }\n          className={classes.Button}\n        >\n          Convert\n        </button>\n\n        <Results\n          pearls={this.props.pearlsConversion}\n          euros={this.props.euroConversaion}\n          currentCurrency={this.props.inputedAmount}\n          currencyName={this.props.currentValue.value}\n        />\n      </div>\n      // </Tab>\n\n      // <Tab eventKey=\"winter\" title=\"Winter\"></Tab>\n      //{/* //   <div className=\"row justify-content-sm-center mt-3\">\n      //     <div className=\"col-sm-3 border border-dark rounded-lg p-2\">\n      //       <div className=\"row justify-content-sm-center\">\n      //         <div className=\"col-sm-12 text-center\"> */}\n      // </Tabs>\n    );\n  }\n}\n\n{\n  /* <DropdownButton id=\"dropdown-item-button \" title=\"select one\">\n          {this.state.currencyID.map(value => (\n            <Dropdown.Item as=\"button\" key={value}>\n              {value}\n            </Dropdown.Item>\n          ))}\n          {/* <Dropdown.Item as=\"button\">{this.state.currencyID}</Dropdown.Item> */\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputedAmount: state.inputedAmount,\n    euroConversaion: state.euroConversaion,\n    pearlsConversion: state.pearlsConversion,\n    apiKey: state.apiKey,\n    currentValue: state.currentValue,\n    options: state.options\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleCurrencyInput: event =>\n      dispatch(actionCreators.incrementCurrency(event.target.value)),\n    handleCurrencySelector: option =>\n      dispatch(actionCreators.selectedCurrency(option)),\n    fetchCurrencyValues: () =>\n      dispatch(actionCreators.fetchingCurrencyValues()),\n    conversion: (currencyVal, currentValue, pearlConversionValue) =>\n      dispatch(\n        actionCreators.fetchConversionValue(\n          currencyVal,\n          currentValue,\n          pearlConversionValue\n        )\n      )\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Converter);\n","import axios from \"axios\";\n\nexport const INCREMENT_CURRENCY = \"INCREMENT_CURRENCY\";\nexport const SELECTED_CURRENCY = \"SELECTED_CURRENCY\";\nexport const FETCH_CURRENCY_VALUES = \"FETCH_CURRENCY_VALUES\";\nexport const STORE_FETCHED_VALUES = \"STORE_FETCHED_VALUES\";\nexport const CONVERSION = \"CONVERSION\";\n\nexport const incrementCurrency = value => {\n  return {\n    type: INCREMENT_CURRENCY,\n    value: value\n  };\n};\n\nexport const selectedCurrency = value => {\n  return {\n    type: SELECTED_CURRENCY,\n    option: value\n  };\n};\n\nexport const storeFetchedValues = value => {\n  // console.log(\"the values are \", value);\n\n  return {\n    type: STORE_FETCHED_VALUES,\n    options: value\n  };\n};\n\nexport const conversion = (convertedToEuro, convertedToPearls) => {\n  return {\n    type: CONVERSION,\n    euroConversaion: convertedToEuro.toFixed(2),\n    pearlsConversion: convertedToPearls.toFixed(2)\n  };\n};\n\nexport const fetchConversionValue = (\n  currencyValue,\n  selectedCurrency,\n  pearlConversionValue\n) => {\n  if (currencyValue !== null && selectedCurrency !== \"\") {\n    // console.log(currencyValue, selectedCurrency.value);\n    const query = selectedCurrency.value + \"_\" + \"EUR\";\n\n    return dispatch => {\n      axios\n        .get(\n          \"https://free.currconv.com/api/v7/convert?q=\" +\n            query +\n            \"&compact=ultra&apiKey=9cc6f8323af31d2f1249\"\n        )\n        .then(response => {\n          const conversation = response.data[query];\n          const convertedToEuro = currencyValue * conversation;\n          const convertedToPearls = convertedToEuro / pearlConversionValue;\n          // console.log(\"converted to pear;s\", convertedToPearls);\n          dispatch(conversion(convertedToEuro, convertedToPearls));\n        });\n    };\n  }\n};\n\nexport const fetchingCurrencyValues = () => {\n  return dispatch => {\n    axios\n      .get(\n        \"https://free.currconv.com/api/v7/currencies?apiKey=9cc6f8323af31d2f1249\"\n      )\n      .then(response => {\n        const currencyNamesArray = Object.keys(response.data.results)\n          .map(element => {\n            return {\n              value: element,\n              label: element\n            };\n          })\n          .filter(element => element.value !== \"EUR\");\n\n        // console.log(\"the names array is\", currencyNamesArray);\n\n        dispatch(storeFetchedValues(currencyNamesArray));\n      });\n  };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Title from \"./components/Title/Title\";\nimport Converter from \"./containers/Converter/Converter\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nfunction App() {\n  return (\n    <>\n      <Title />\n      <Tabs defaultActiveKey=\"summer\" className=\"Tab\">\n        <Tab eventKey=\"summer\" title=\"Summer\">\n          <Converter conversionValue=\"1.6\" />\n        </Tab>\n        <Tab eventKey=\"winter\" title=\"Winter\">\n          <Converter conversionValue=\"2.14\" />\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n\nexport default App;\n","const intialState = {\n  euroConversaion: 0,\n  inputedAmount: 0,\n  pearlsConversion: 0,\n  apiKey: \"9cc6f8323af31d2f1249\",\n  currentValue: \"\",\n  options: []\n};\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"INCREMENT_CURRENCY\":\n      // console.log(\"inside increment curency\");\n      return {\n        ...state,\n        inputedAmount: Math.abs(action.value)\n      };\n\n    case \"STORE_FETCHED_VALUES\":\n      // console.log(\"the action is \", action);\n      return {\n        ...state,\n        options: action.options\n      };\n\n    case \"SELECTED_CURRENCY\":\n      return {\n        ...state,\n        currentValue: action.option\n      };\n\n    case \"CONVERSION\":\n      return {\n        ...state,\n        euroConversaion: action.euroConversaion,\n        pearlsConversion: action.pearlsConversion\n      };\n\n    // case \"CONVERSION\":\n    //   return {\n    //     ...state,\n    //     currentValue: action.option\n    //   };\n\n    // case \"FETCH_CURRENCY_VALUES\":\n    //   return dispatch => {\n    //     dispatch(fetchingValuesStarted());\n    //     axios\n    //       .get(\n    //         `https://free.currconv.com/api/v7/currencies?apiKey=${state.apiKey}`\n    //       )\n    //       .then(response => {\n    //         const currencyNamesArray = Object.keys(response.data.results)\n    //           .map(element => {\n    //             return {\n    //               value: element,\n    //               label: element\n    //             };\n    //           })\n    //           .filter(element => element.value !== \"EUR\");\n    //         dispatch(fetchingSuccess(currencyNamesArray));\n    //       });\n    //   };\n  }\n  // const fetchingSuccess = currencyNamesArray => ({\n  //   ...state,\n  //   options: currencyNamesArray\n  // });\n\n  // if (action.type === \"INCREMENT\") {\n  //   return {\n  //     ...state,\n  //     counter: state.counter + 1\n  //   };\n  // }\n  return state;\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducer/reducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Converter\":\"Converter_Converter__2SbgI\",\"Select\":\"Converter_Select__10DxZ\",\"Button\":\"Converter_Button__1QVAj\",\"Input\":\"Converter_Input__2N1Qi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2g01r\",\"Title\":\"Navbar_Title__YXSmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"Results_Results__jHOtM\"};"],"sourceRoot":""}